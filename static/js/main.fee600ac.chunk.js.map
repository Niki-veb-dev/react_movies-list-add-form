{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","inputTitle","inputDescription","inputImgUrl","inputImdbUrl","inputImdbId","hasTitleError","hasImgUrlError","hasImdbUrlError","hasImdbIdError","validateUrl","url","test","handleSubmit","event","preventDefault","getErrorName","name","slice","handleChange","target","value","newState","setState","handleBlur","validateForm","trim","disabledButton","getNewFilm","clearState","handleSubmitFilm","props","onAdd","this","onSubmit","type","placeholder","onChange","onBlur","onClick","disabled","Component","App","moviesFromServer","addMovie","newFilm","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"oyEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,OCMfC,G,MAAb,4MACEC,MAAe,CACbC,WAAY,GACZC,iBAAkB,GAClBC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB,EACjBC,gBAAgB,GAVpB,EAaEC,YAAc,SAACC,GAGb,MAFiB,uKAEDC,KAAKD,IAhBzB,EAmBEE,aAAe,SAACC,GACdA,EAAMC,kBApBV,EAuBEC,aAAe,SAACC,GACd,MAAM,MAAN,OAAaA,EAAKC,MAAM,GAAxB,UAxBJ,EA2BEC,aAAe,SAACL,GAAgD,IAAD,EAC7D,EAAwBA,EAAMM,OAAtBH,EAAR,EAAQA,KAAMI,EAAd,EAAcA,MACRC,GAAQ,mBACXL,EAAOI,GADI,cAEX,EAAKL,aAAaC,IAAQ,GAFf,GAKd,EAAKM,SAASD,IAlClB,EAqCEE,WAAa,SAACV,GACZ,IAAQG,EAASH,EAAMM,OAAfH,KACFK,EAAQ,eACX,EAAKN,aAAaC,KAAUA,GAG/B,EAAKM,SAASD,IA3ClB,EA8CEG,aAAe,WACb,MAKI,EAAKzB,MAJPC,EADF,EACEA,WACAG,EAFF,EAEEA,aACAD,EAHF,EAGEA,YACAE,EAJF,EAIEA,YAGF,SAAKJ,EAAWyB,QAAW,EAAKhB,YAAYN,IACtCC,EAAYqB,QAAW,EAAKhB,YAAYP,MAC5C,EAAKoB,SAAS,CACZjB,eAAgBL,EAAWyB,OAC3BlB,iBAAkB,EAAKE,YAAYN,GACnCG,gBAAiB,EAAKG,YAAYP,GAClCM,gBAAiBJ,EAAYqB,UAGxB,IA/Db,EAqEEC,eAAiB,WACf,MAKI,EAAK3B,MAJPM,EADF,EACEA,cACAG,EAFF,EAEEA,eACAD,EAHF,EAGEA,gBACAD,EAJF,EAIEA,eAGF,OAAOD,GAAiBG,GACnBF,GAAkBC,GA9E3B,EAiFEoB,WAAa,WACX,MAMI,EAAK5B,MAET,MAAO,CACLd,MATF,EACEe,WASAd,YAVF,EAEEe,iBASAb,QAXF,EAGEe,aASAhB,OAZF,EAIEe,YASAL,OAbF,EAKEO,cAvFN,EAmGEwB,WAAa,WACX,EAAKN,SAAS,CACZtB,WAAY,GACZC,iBAAkB,GAClBE,aAAc,GACdD,YAAa,GACbE,YAAa,GACbC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB,EACjBC,gBAAgB,KA7GtB,EAiHEqB,iBAAmB,WACG,EAAKL,iBAGvB,EAAKM,MAAMC,MAAM,EAAKJ,cACtB,EAAKC,eAtHX,4CA0HE,WAAU,IAAD,OACP,EAUII,KAAKjC,MATPC,EADF,EACEA,WACAC,EAFF,EAEEA,iBACAE,EAHF,EAGEA,aACAD,EAJF,EAIEA,YACAE,EALF,EAKEA,YACAC,EANF,EAMEA,cACAG,EAPF,EAOEA,eACAD,EARF,EAQEA,gBACAD,EATF,EASEA,eAGF,OACE,uBAAM2B,SAAUD,KAAKpB,aAAcvB,UAAU,WAA7C,UACE,uBACE6C,KAAK,OACLlB,KAAK,aACLI,MAAOpB,EACPmC,YAAY,QACZ9C,UAAU,mBACV+C,SAAUJ,KAAKd,aACfmB,OAAQ,SAACxB,GAAD,OAAW,EAAKU,WAAWV,MAEpCR,GAAiB,qBAAKhB,UAAU,kBAAf,2BAClB,uBACE6C,KAAK,OACLlB,KAAK,mBACLI,MAAOnB,EACPkC,YAAY,cACZ9C,UAAU,wBACV+C,SAAUJ,KAAKd,aACfmB,OAAQ,SAACxB,GAAD,OAAW,EAAKU,WAAWV,MAErC,uBACEqB,KAAK,OACLlB,KAAK,cACLI,MAAOlB,EACPiC,YAAY,SACZ9C,UAAU,wBACV+C,SAAUJ,KAAKd,aACfmB,OAAQ,SAACxB,GAAD,OAAW,EAAKU,WAAWV,MAEpCP,GAAkB,qBAAKjB,UAAU,kBAAf,4BACnB,uBACE6C,KAAK,OACLlB,KAAK,eACLI,MAAOjB,EACPgC,YAAY,UACZ9C,UAAU,wBACV+C,SAAUJ,KAAKd,aACfmB,OAAQ,SAACxB,GAAD,OAAW,EAAKU,WAAWV,MAEpCN,GAAmB,qBAAKlB,UAAU,kBAAf,6BACpB,uBACE6C,KAAK,OACLlB,KAAK,cACLI,MAAOhB,EACP+B,YAAY,SACZ9C,UAAU,wBACV+C,SAAUJ,KAAKd,aACfmB,OAAQ,SAACxB,GAAD,OAAW,EAAKU,WAAWV,MAEpCL,GAAkB,qBAAKnB,UAAU,kBAAf,4BACnB,wBACE6C,KAAK,SACL7C,UAAU,sBACViD,QAASN,KAAKH,iBACdU,SAAUP,KAAKN,iBAJjB,2BA1LR,GAA8Bc,c,QCRjBC,EAAb,4MACE1C,MAAe,CACbL,OAAQgD,GAFZ,EAKEC,SAAW,SAACC,GACV,EAAKtB,UAAS,SAACuB,GAAD,MAAgB,CAC5BnD,OAAO,GAAD,mBAAMmD,EAAUnD,QAAhB,CAAwBkD,SAPpC,4CAWE,WACE,IAAQlD,EAAWsC,KAAKjC,MAAhBL,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAU0C,MAAOC,KAAKW,oBApBhC,GAAyBG,IAAMN,WCN/BO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fee600ac.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (newFilm: Movie) => void\n};\ntype State = {\n  inputTitle: string;\n  inputDescription: string;\n  inputImgUrl: string;\n  inputImdbUrl: string;\n  inputImdbId: string;\n  hasTitleError: boolean;\n  hasImgUrlError: boolean;\n  hasImdbUrlError: boolean;\n  hasImdbIdError: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    inputTitle: '',\n    inputDescription: '',\n    inputImgUrl: '',\n    inputImdbUrl: '',\n    inputImdbId: '',\n    hasTitleError: false,\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    hasImdbIdError: false,\n  };\n\n  validateUrl = (url: string) => {\n    const validate = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&= +$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#? (?:[.!/\\\\\\w]*))?)$/;\n\n    return validate.test(url);\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n  };\n\n  getErrorName = (name: string) => {\n    return `has${name.slice(5)}Error`;\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const newState = {\n      [name]: value,\n      [this.getErrorName(name)]: false,\n    } as Pick<State, keyof State>;\n\n    this.setState(newState);\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n    const newState = {\n      [this.getErrorName(name)]: !!name,\n    } as Pick<OnBlurHasError, keyof OnBlurHasError>;\n\n    this.setState(newState);\n  };\n\n  validateForm = () => {\n    const {\n      inputTitle,\n      inputImdbUrl,\n      inputImgUrl,\n      inputImdbId,\n    } = this.state;\n\n    if (!inputTitle.trim() || !this.validateUrl(inputImdbUrl)\n      || !inputImdbId.trim() || !this.validateUrl(inputImgUrl)) {\n      this.setState({\n        hasTitleError: !inputTitle.trim(),\n        hasImdbUrlError: !this.validateUrl(inputImdbUrl),\n        hasImgUrlError: !this.validateUrl(inputImgUrl),\n        hasImdbIdError: !inputImdbId.trim(),\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  disabledButton = () => {\n    const {\n      hasTitleError,\n      hasImdbIdError,\n      hasImdbUrlError,\n      hasImgUrlError,\n    } = this.state;\n\n    return hasTitleError || hasImdbIdError\n      || hasImgUrlError || hasImdbUrlError;\n  };\n\n  getNewFilm = () => {\n    const {\n      inputTitle,\n      inputDescription,\n      inputImdbUrl,\n      inputImgUrl,\n      inputImdbId,\n    } = this.state;\n\n    return {\n      title: inputTitle,\n      description: inputDescription,\n      imdbUrl: inputImdbUrl,\n      imgUrl: inputImgUrl,\n      imdbId: inputImdbId,\n    };\n  };\n\n  clearState = () => {\n    this.setState({\n      inputTitle: '',\n      inputDescription: '',\n      inputImdbUrl: '',\n      inputImgUrl: '',\n      inputImdbId: '',\n      hasTitleError: false,\n      hasImgUrlError: false,\n      hasImdbUrlError: false,\n      hasImdbIdError: false,\n    });\n  };\n\n  handleSubmitFilm = () => {\n    const isFormValid = this.validateForm();\n\n    if (isFormValid) {\n      this.props.onAdd(this.getNewFilm());\n      this.clearState();\n    }\n  };\n\n  render() {\n    const {\n      inputTitle,\n      inputDescription,\n      inputImdbUrl,\n      inputImgUrl,\n      inputImdbId,\n      hasTitleError,\n      hasImdbIdError,\n      hasImdbUrlError,\n      hasImgUrlError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"box mt-5\">\n        <input\n          type=\"text\"\n          name=\"inputTitle\"\n          value={inputTitle}\n          placeholder=\"title\"\n          className=\"input is-rounded\"\n          onChange={this.handleChange}\n          onBlur={(event) => this.handleBlur(event)}\n        />\n        {hasTitleError && <div className=\"has-text-danger\">write a title</div>}\n        <input\n          type=\"text\"\n          name=\"inputDescription\"\n          value={inputDescription}\n          placeholder=\"description\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={(event) => this.handleBlur(event)}\n        />\n        <input\n          type=\"text\"\n          name=\"inputImgUrl\"\n          value={inputImgUrl}\n          placeholder=\"imgUrl\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={(event) => this.handleBlur(event)}\n        />\n        {hasImgUrlError && <div className=\"has-text-danger\">write a imgUrl</div>}\n        <input\n          type=\"text\"\n          name=\"inputImdbUrl\"\n          value={inputImdbUrl}\n          placeholder=\"imdbUrl\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={(event) => this.handleBlur(event)}\n        />\n        {hasImdbUrlError && <div className=\"has-text-danger\">write a imdbUrl</div>}\n        <input\n          type=\"text\"\n          name=\"inputImdbId\"\n          value={inputImdbId}\n          placeholder=\"imdbId\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={(event) => this.handleBlur(event)}\n        />\n        {hasImdbIdError && <div className=\"has-text-danger\">write a imdbId</div>}\n        <button\n          type=\"button\"\n          className=\"button is-dark mt-6\"\n          onClick={this.handleSubmitFilm}\n          disabled={this.disabledButton()}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newFilm: Movie) => {\n    this.setState((prevState) => ({\n      movies: [...prevState.movies, newFilm],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}