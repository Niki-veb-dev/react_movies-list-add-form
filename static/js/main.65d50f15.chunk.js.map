{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","hasTitleError","hasImgUrlError","hasImdbUrlError","hasImdbIdError","validateUrl","url","test","validateInput","event","target","name","value","trim","handleSubmit","preventDefault","validateForm","props","onAdd","getNewFilm","clearState","getErrorName","toUpperCase","slice","handleChange","newState","setState","handleBlur","hasErrorName","disabledButton","this","onSubmit","type","placeholder","onChange","onBlur","disabled","Component","App","moviesFromServer","addMovie","newFilm","prevState","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65d50f15.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (newFilm: Movie) => void\n};\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  hasTitleError: boolean;\n  hasImgUrlError: boolean;\n  hasImdbUrlError: boolean;\n  hasImdbIdError: boolean;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    hasTitleError: false,\n    hasImgUrlError: false,\n    hasImdbUrlError: false,\n    hasImdbIdError: false,\n  };\n\n  validateUrl = (url: string) => {\n    const validate = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return validate.test(url);\n  };\n\n  validateInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n      case 'imdbId':\n        return value.trim();\n      case 'imgUrl':\n      case 'imdbUrl':\n        return this.validateUrl(value);\n      default:\n        return false;\n    }\n  };\n\n  handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    const isFormValid = this.validateForm();\n\n    if (isFormValid) {\n      this.props.onAdd(this.getNewFilm());\n      this.clearState();\n    }\n  };\n\n  getErrorName = (name: string) => {\n    return `has${name[0].toUpperCase()}${name.slice(1)}Error`;\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const newState = {\n      [name]: value,\n      [this.getErrorName(name)]: !this.validateInput(event),\n    } as State;\n\n    this.setState(newState);\n  };\n\n  handleBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    const { name } = event.target;\n    const hasErrorName = this.getErrorName(name);\n    let newState;\n\n    if (name !== 'description') {\n      newState = { [hasErrorName]: !this.validateInput(event) } as\n        OnBlurHasError;\n      this.setState(newState);\n    }\n  };\n\n  validateForm = () => {\n    const {\n      title,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n    } = this.state;\n\n    if (!title.trim() || !this.validateUrl(imdbUrl)\n      || !imdbId.trim() || !this.validateUrl(imgUrl)) {\n      this.setState({\n        hasTitleError: !title.trim(),\n        hasImdbUrlError: !this.validateUrl(imdbUrl),\n        hasImgUrlError: !this.validateUrl(imgUrl),\n        hasImdbIdError: !imdbId.trim(),\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  disabledButton = () => {\n    const {\n      hasTitleError,\n      hasImdbIdError,\n      hasImdbUrlError,\n      hasImgUrlError,\n    } = this.state;\n\n    return hasTitleError || hasImdbIdError\n      || hasImgUrlError || hasImdbUrlError;\n  };\n\n  getNewFilm = () => {\n    const {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n    } = this.state;\n\n    return {\n      title: title.trim(),\n      description: description.trim(),\n      imdbUrl: imdbUrl.trim(),\n      imgUrl: imgUrl.trim(),\n      imdbId: imdbId.trim(),\n    };\n  };\n\n  clearState = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imdbUrl: '',\n      imgUrl: '',\n      imdbId: '',\n      hasTitleError: false,\n      hasImgUrlError: false,\n      hasImdbUrlError: false,\n      hasImdbIdError: false,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n      hasTitleError,\n      hasImdbIdError,\n      hasImdbUrlError,\n      hasImgUrlError,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"box mt-5\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          placeholder=\"title\"\n          className=\"input is-rounded\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {hasTitleError && <div className=\"has-text-danger\">write a title</div>}\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          placeholder=\"description\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"imgUrl\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {hasImgUrlError && <div className=\"has-text-danger\">write a imgUrl</div>}\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"imdbUrl\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {hasImdbUrlError && <div className=\"has-text-danger\">write a imdbUrl</div>}\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"imdbId\"\n          className=\"input is-rounded mt-3\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        {hasImdbIdError && <div className=\"has-text-danger\">write a imdbId</div>}\n        <button\n          type=\"submit\"\n          className=\"button is-dark mt-6\"\n          disabled={this.disabledButton()}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (newFilm: Movie) => {\n    this.setState((prevState) => ({\n      movies: [...prevState.movies, newFilm],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}